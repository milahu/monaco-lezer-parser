{
    "simpleTerms": {

        "variable_name": "variable",

        "__construct": "function",
        "\"echo\"": "function",
        "\"print\"": "function",
        "\"unset\"": "function",
        "\"isset\"": "function",
        "\"eval\"": "function",
        "\"array\"": "function",
        "\"list\"": "function",
        "\"empty\"": "function",

        "require_once": "function",
        "require": "function",
        "include_once": "function",
        "include": "function",

        "\"callable\"": "modifier",
        "\"var\"": "modifier",
        "\"trait\"": "modifier",
        "\"class\"": "modifier",
        "\"interface\"": "modifier",
        "\"function\"": "modifier",
        "\"type\"": "modifier",

        "\"static\"": "modifier",
        "\"public\"": "modifier",
        "\"private\"": "modifier",
        "\"protected\"": "modifier",
        "\"global\"": "modifier",
        "\"const\"": "modifier",
        "\"abstract\"": "modifier",
        "\"extends\"": "modifier",
        "\"implements\"": "modifier",
        "\"final\"": "modifier",

        "integer": "number",
        "float": "number",
        "string": "string",
        "regex": "string",

        "true": "constant",
        "false": "constant",

        "comment": "comment",

        "\"if\"": "control",
        "\"do\"": "control",
        "\"else\"": "control",
        "\"elseif\"": "control",
        "\"endif\"": "control",
        "\"while\"": "control",
        "\"endwhile\"": "control",
        "\"for\"": "control",
        "\"endfor\"": "control",
        "\"foreach\"": "control",
        "\"endforeach\"": "control",
        "\"declare\"": "control",
        "\"enddeclare\"": "control",
        "\"return\"": "control",
        "\"break\"": "control",
        "\"continue\"": "control",
        "\"throw\"": "control",
        "\"try\"": "control",
        "\"catch\"": "control",
        "\"finally\"": "control",
        "\"switch\"": "control",
        "\"endswitch\"": "control",
        "\"case\"": "control",
        "\"default\"": "control",
        "\"yield\"": "control",
        "\"goto\"": "control",
        "\"exit\"": "control",
        "\"die\"": "control",

        "\"new\"": "operator",
        "\"clone\"": "operator",
        "\"insteadof\"": "operator",
        "\"instanceof\"": "operator",

        "\"+\"": "operator",
        "\"-\"": "operator",
        "\"*\"": "operator",
        "\"/\"": "operator",
        "\"%\"": "operator",
        "\"**\"": "operator",
        "\"=\"": "operator",
        "\"==\"": "operator",
        "\"===\"": "operator",
        "\"!=\"": "operator",
        "\"!==\"": "operator",
        "\"<\"": "operator",
        "\">\"": "operator",
        "\"<>\"": "operator",
        "\"<=\"": "operator",
        "\"=>\"": "operator",
        "\">=\"": "operator",
        "\"<=>\"": "operator",
        "\"&\"": "operator",
        "\"$\"": "operator",
        "\"|\"": "operator",
        "\"^\"": "operator",
        "\"~\"": "operator",
        "\"<<\"": "operator",
        "\">>\"": "operator",
        "\"++\"": "operator",
        "\"--\"": "operator",
        "\"and\"": "operator",
        "\"or\"": "operator",
        "\"xor\"": "operator",
        "\"!\"": "operator",
        "\"&&\"": "operator",
        "\"||\"": "operator",
        "\".\"": "operator",
        "\"?\"": "operator",
        "\":\"": "operator",
        "\"??\"": "operator",
        "\"->\"": "operator",
        "\"as\"": "operator",

        "\"use\"": "directive",
        "\"namespace\"": "directive",

        "\"(\"": "punctuation",
        "\")\"": "punctuation",
        "\"{\"": "punctuation",
        "\"}\"": "punctuation",
        "\"[\"": "punctuation",
        "\"]\"": "punctuation",
        "\";\"": "punctuation",
        "\",\"": "punctuation"
    },

    "complexTerms": ["name", "simple_variable"],

    "complexScopes": {
        "class_declaration > name": "type",
        "catch_clause > qualified_name > name": "type",
        "class_base_clause > qualified_name > name": "type",
        "interface_declaration > name": "type",
        "class_interface_clause > qualified_name > name": "type",
        "object_creation_expression > qualified_name > name": "type",
        "cast_expression > cast_type": "type",
        "object_creation_expression > new_variable > simple_variable": "type",

        "name": "variable",
        "member_access_expression > name": "variable",

        "function_definition > name": "function",
        "function_call_expression > name": "function",
        "function_call_expression > qualified_name": "function",
        "method_declaration > name": "function",
        "method_declaration > function_definition > name": "function",
        "scoped_call_expression > name": "function",
        "member_call_expression > name": "function",

        "const_element > name": "constant",
        "class_constant_access_expression > name": "constant",
        "qualified_name > name": "constant"
    }
}
